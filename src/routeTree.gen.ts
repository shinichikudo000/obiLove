/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/signUp'
import { Route as SignInImport } from './routes/signIn'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedSettingsImport } from './routes/_authed/settings'
import { Route as AuthedPartnersImport } from './routes/_authed/partners'
import { Route as AuthedObituaryImport } from './routes/_authed/obituary'
import { Route as AuthedDashboardImport } from './routes/_authed/dashboard'
import { Route as ObituaryIdIndexImport } from './routes/obituary_/$id/index'
import { Route as AuthedPartnersIndexImport } from './routes/_authed/partners/index'
import { Route as AuthedObituaryIndexImport } from './routes/_authed/obituary/index'
import { Route as AuthedPartnersFuneralparlorsImport } from './routes/_authed/partners/funeral_parlors'
import { Route as AuthedPartnersFuneralchapelsImport } from './routes/_authed/partners/funeral_chapels'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedSettingsRoute = AuthedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedPartnersRoute = AuthedPartnersImport.update({
  id: '/partners',
  path: '/partners',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedObituaryRoute = AuthedObituaryImport.update({
  id: '/obituary',
  path: '/obituary',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedDashboardRoute = AuthedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedRoute,
} as any)

const ObituaryIdIndexRoute = ObituaryIdIndexImport.update({
  id: '/obituary_/$id/',
  path: '/obituary/$id/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedPartnersIndexRoute = AuthedPartnersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedPartnersRoute,
} as any)

const AuthedObituaryIndexRoute = AuthedObituaryIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedObituaryRoute,
} as any)

const AuthedPartnersFuneralparlorsRoute =
  AuthedPartnersFuneralparlorsImport.update({
    id: '/funeral_parlors',
    path: '/funeral_parlors',
    getParentRoute: () => AuthedPartnersRoute,
  } as any)

const AuthedPartnersFuneralchapelsRoute =
  AuthedPartnersFuneralchapelsImport.update({
    id: '/funeral_chapels',
    path: '/funeral_chapels',
    getParentRoute: () => AuthedPartnersRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_authed/dashboard': {
      id: '/_authed/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedDashboardImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/obituary': {
      id: '/_authed/obituary'
      path: '/obituary'
      fullPath: '/obituary'
      preLoaderRoute: typeof AuthedObituaryImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/partners': {
      id: '/_authed/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof AuthedPartnersImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/settings': {
      id: '/_authed/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthedSettingsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/partners/funeral_chapels': {
      id: '/_authed/partners/funeral_chapels'
      path: '/funeral_chapels'
      fullPath: '/partners/funeral_chapels'
      preLoaderRoute: typeof AuthedPartnersFuneralchapelsImport
      parentRoute: typeof AuthedPartnersImport
    }
    '/_authed/partners/funeral_parlors': {
      id: '/_authed/partners/funeral_parlors'
      path: '/funeral_parlors'
      fullPath: '/partners/funeral_parlors'
      preLoaderRoute: typeof AuthedPartnersFuneralparlorsImport
      parentRoute: typeof AuthedPartnersImport
    }
    '/_authed/obituary/': {
      id: '/_authed/obituary/'
      path: '/'
      fullPath: '/obituary/'
      preLoaderRoute: typeof AuthedObituaryIndexImport
      parentRoute: typeof AuthedObituaryImport
    }
    '/_authed/partners/': {
      id: '/_authed/partners/'
      path: '/'
      fullPath: '/partners/'
      preLoaderRoute: typeof AuthedPartnersIndexImport
      parentRoute: typeof AuthedPartnersImport
    }
    '/obituary_/$id/': {
      id: '/obituary_/$id/'
      path: '/obituary/$id'
      fullPath: '/obituary/$id'
      preLoaderRoute: typeof ObituaryIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthedObituaryRouteChildren {
  AuthedObituaryIndexRoute: typeof AuthedObituaryIndexRoute
}

const AuthedObituaryRouteChildren: AuthedObituaryRouteChildren = {
  AuthedObituaryIndexRoute: AuthedObituaryIndexRoute,
}

const AuthedObituaryRouteWithChildren = AuthedObituaryRoute._addFileChildren(
  AuthedObituaryRouteChildren,
)

interface AuthedPartnersRouteChildren {
  AuthedPartnersFuneralchapelsRoute: typeof AuthedPartnersFuneralchapelsRoute
  AuthedPartnersFuneralparlorsRoute: typeof AuthedPartnersFuneralparlorsRoute
  AuthedPartnersIndexRoute: typeof AuthedPartnersIndexRoute
}

const AuthedPartnersRouteChildren: AuthedPartnersRouteChildren = {
  AuthedPartnersFuneralchapelsRoute: AuthedPartnersFuneralchapelsRoute,
  AuthedPartnersFuneralparlorsRoute: AuthedPartnersFuneralparlorsRoute,
  AuthedPartnersIndexRoute: AuthedPartnersIndexRoute,
}

const AuthedPartnersRouteWithChildren = AuthedPartnersRoute._addFileChildren(
  AuthedPartnersRouteChildren,
)

interface AuthedRouteChildren {
  AuthedDashboardRoute: typeof AuthedDashboardRoute
  AuthedObituaryRoute: typeof AuthedObituaryRouteWithChildren
  AuthedPartnersRoute: typeof AuthedPartnersRouteWithChildren
  AuthedSettingsRoute: typeof AuthedSettingsRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedDashboardRoute: AuthedDashboardRoute,
  AuthedObituaryRoute: AuthedObituaryRouteWithChildren,
  AuthedPartnersRoute: AuthedPartnersRouteWithChildren,
  AuthedSettingsRoute: AuthedSettingsRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/obituary': typeof AuthedObituaryRouteWithChildren
  '/partners': typeof AuthedPartnersRouteWithChildren
  '/settings': typeof AuthedSettingsRoute
  '/partners/funeral_chapels': typeof AuthedPartnersFuneralchapelsRoute
  '/partners/funeral_parlors': typeof AuthedPartnersFuneralparlorsRoute
  '/obituary/': typeof AuthedObituaryIndexRoute
  '/partners/': typeof AuthedPartnersIndexRoute
  '/obituary/$id': typeof ObituaryIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/dashboard': typeof AuthedDashboardRoute
  '/settings': typeof AuthedSettingsRoute
  '/partners/funeral_chapels': typeof AuthedPartnersFuneralchapelsRoute
  '/partners/funeral_parlors': typeof AuthedPartnersFuneralparlorsRoute
  '/obituary': typeof AuthedObituaryIndexRoute
  '/partners': typeof AuthedPartnersIndexRoute
  '/obituary/$id': typeof ObituaryIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/_authed/dashboard': typeof AuthedDashboardRoute
  '/_authed/obituary': typeof AuthedObituaryRouteWithChildren
  '/_authed/partners': typeof AuthedPartnersRouteWithChildren
  '/_authed/settings': typeof AuthedSettingsRoute
  '/_authed/partners/funeral_chapels': typeof AuthedPartnersFuneralchapelsRoute
  '/_authed/partners/funeral_parlors': typeof AuthedPartnersFuneralparlorsRoute
  '/_authed/obituary/': typeof AuthedObituaryIndexRoute
  '/_authed/partners/': typeof AuthedPartnersIndexRoute
  '/obituary_/$id/': typeof ObituaryIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signIn'
    | '/signUp'
    | '/dashboard'
    | '/obituary'
    | '/partners'
    | '/settings'
    | '/partners/funeral_chapels'
    | '/partners/funeral_parlors'
    | '/obituary/'
    | '/partners/'
    | '/obituary/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signIn'
    | '/signUp'
    | '/dashboard'
    | '/settings'
    | '/partners/funeral_chapels'
    | '/partners/funeral_parlors'
    | '/obituary'
    | '/partners'
    | '/obituary/$id'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/signIn'
    | '/signUp'
    | '/_authed/dashboard'
    | '/_authed/obituary'
    | '/_authed/partners'
    | '/_authed/settings'
    | '/_authed/partners/funeral_chapels'
    | '/_authed/partners/funeral_parlors'
    | '/_authed/obituary/'
    | '/_authed/partners/'
    | '/obituary_/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  ObituaryIdIndexRoute: typeof ObituaryIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  ObituaryIdIndexRoute: ObituaryIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/signIn",
        "/signUp",
        "/obituary_/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/dashboard",
        "/_authed/obituary",
        "/_authed/partners",
        "/_authed/settings"
      ]
    },
    "/signIn": {
      "filePath": "signIn.tsx"
    },
    "/signUp": {
      "filePath": "signUp.tsx"
    },
    "/_authed/dashboard": {
      "filePath": "_authed/dashboard.tsx",
      "parent": "/_authed"
    },
    "/_authed/obituary": {
      "filePath": "_authed/obituary.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/obituary/"
      ]
    },
    "/_authed/partners": {
      "filePath": "_authed/partners.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/partners/funeral_chapels",
        "/_authed/partners/funeral_parlors",
        "/_authed/partners/"
      ]
    },
    "/_authed/settings": {
      "filePath": "_authed/settings.tsx",
      "parent": "/_authed"
    },
    "/_authed/partners/funeral_chapels": {
      "filePath": "_authed/partners/funeral_chapels.tsx",
      "parent": "/_authed/partners"
    },
    "/_authed/partners/funeral_parlors": {
      "filePath": "_authed/partners/funeral_parlors.tsx",
      "parent": "/_authed/partners"
    },
    "/_authed/obituary/": {
      "filePath": "_authed/obituary/index.tsx",
      "parent": "/_authed/obituary"
    },
    "/_authed/partners/": {
      "filePath": "_authed/partners/index.tsx",
      "parent": "/_authed/partners"
    },
    "/obituary_/$id/": {
      "filePath": "obituary_/$id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
