/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/signUp'
import { Route as SignInImport } from './routes/signIn'
import { Route as AuthedImport } from './routes/_authed'
import { Route as IndexImport } from './routes/index'
import { Route as AuthedUserImport } from './routes/_authed/_user'
import { Route as AuthedAdminImport } from './routes/_authed/_admin'
import { Route as ObituaryIdIndexImport } from './routes/obituary_/$id/index'
import { Route as AuthedUserSettingsImport } from './routes/_authed/_user/settings'
import { Route as AuthedUserPartnersImport } from './routes/_authed/_user/partners'
import { Route as AuthedUserObituaryImport } from './routes/_authed/_user/obituary'
import { Route as AuthedUserDashboardImport } from './routes/_authed/_user/dashboard'
import { Route as AuthedUserPartnersIndexImport } from './routes/_authed/_user/partners/index'
import { Route as AuthedUserObituaryIndexImport } from './routes/_authed/_user/obituary/index'
import { Route as AuthedUserPartnersFuneralparlorsImport } from './routes/_authed/_user/partners/funeral_parlors'
import { Route as AuthedUserPartnersFuneralchapelsImport } from './routes/_authed/_user/partners/funeral_chapels'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedUserRoute = AuthedUserImport.update({
  id: '/_user',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminRoute = AuthedAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AuthedRoute,
} as any)

const ObituaryIdIndexRoute = ObituaryIdIndexImport.update({
  id: '/obituary_/$id/',
  path: '/obituary/$id/',
  getParentRoute: () => rootRoute,
} as any)

const AuthedUserSettingsRoute = AuthedUserSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthedUserRoute,
} as any)

const AuthedUserPartnersRoute = AuthedUserPartnersImport.update({
  id: '/partners',
  path: '/partners',
  getParentRoute: () => AuthedUserRoute,
} as any)

const AuthedUserObituaryRoute = AuthedUserObituaryImport.update({
  id: '/obituary',
  path: '/obituary',
  getParentRoute: () => AuthedUserRoute,
} as any)

const AuthedUserDashboardRoute = AuthedUserDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedUserRoute,
} as any)

const AuthedUserPartnersIndexRoute = AuthedUserPartnersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedUserPartnersRoute,
} as any)

const AuthedUserObituaryIndexRoute = AuthedUserObituaryIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthedUserObituaryRoute,
} as any)

const AuthedUserPartnersFuneralparlorsRoute =
  AuthedUserPartnersFuneralparlorsImport.update({
    id: '/funeral_parlors',
    path: '/funeral_parlors',
    getParentRoute: () => AuthedUserPartnersRoute,
  } as any)

const AuthedUserPartnersFuneralchapelsRoute =
  AuthedUserPartnersFuneralchapelsImport.update({
    id: '/funeral_chapels',
    path: '/funeral_chapels',
    getParentRoute: () => AuthedUserPartnersRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_authed/_admin': {
      id: '/_authed/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedAdminImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/_user': {
      id: '/_authed/_user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedUserImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/_user/dashboard': {
      id: '/_authed/_user/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedUserDashboardImport
      parentRoute: typeof AuthedUserImport
    }
    '/_authed/_user/obituary': {
      id: '/_authed/_user/obituary'
      path: '/obituary'
      fullPath: '/obituary'
      preLoaderRoute: typeof AuthedUserObituaryImport
      parentRoute: typeof AuthedUserImport
    }
    '/_authed/_user/partners': {
      id: '/_authed/_user/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof AuthedUserPartnersImport
      parentRoute: typeof AuthedUserImport
    }
    '/_authed/_user/settings': {
      id: '/_authed/_user/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthedUserSettingsImport
      parentRoute: typeof AuthedUserImport
    }
    '/obituary_/$id/': {
      id: '/obituary_/$id/'
      path: '/obituary/$id'
      fullPath: '/obituary/$id'
      preLoaderRoute: typeof ObituaryIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authed/_user/partners/funeral_chapels': {
      id: '/_authed/_user/partners/funeral_chapels'
      path: '/funeral_chapels'
      fullPath: '/partners/funeral_chapels'
      preLoaderRoute: typeof AuthedUserPartnersFuneralchapelsImport
      parentRoute: typeof AuthedUserPartnersImport
    }
    '/_authed/_user/partners/funeral_parlors': {
      id: '/_authed/_user/partners/funeral_parlors'
      path: '/funeral_parlors'
      fullPath: '/partners/funeral_parlors'
      preLoaderRoute: typeof AuthedUserPartnersFuneralparlorsImport
      parentRoute: typeof AuthedUserPartnersImport
    }
    '/_authed/_user/obituary/': {
      id: '/_authed/_user/obituary/'
      path: '/'
      fullPath: '/obituary/'
      preLoaderRoute: typeof AuthedUserObituaryIndexImport
      parentRoute: typeof AuthedUserObituaryImport
    }
    '/_authed/_user/partners/': {
      id: '/_authed/_user/partners/'
      path: '/'
      fullPath: '/partners/'
      preLoaderRoute: typeof AuthedUserPartnersIndexImport
      parentRoute: typeof AuthedUserPartnersImport
    }
  }
}

// Create and export the route tree

interface AuthedUserObituaryRouteChildren {
  AuthedUserObituaryIndexRoute: typeof AuthedUserObituaryIndexRoute
}

const AuthedUserObituaryRouteChildren: AuthedUserObituaryRouteChildren = {
  AuthedUserObituaryIndexRoute: AuthedUserObituaryIndexRoute,
}

const AuthedUserObituaryRouteWithChildren =
  AuthedUserObituaryRoute._addFileChildren(AuthedUserObituaryRouteChildren)

interface AuthedUserPartnersRouteChildren {
  AuthedUserPartnersFuneralchapelsRoute: typeof AuthedUserPartnersFuneralchapelsRoute
  AuthedUserPartnersFuneralparlorsRoute: typeof AuthedUserPartnersFuneralparlorsRoute
  AuthedUserPartnersIndexRoute: typeof AuthedUserPartnersIndexRoute
}

const AuthedUserPartnersRouteChildren: AuthedUserPartnersRouteChildren = {
  AuthedUserPartnersFuneralchapelsRoute: AuthedUserPartnersFuneralchapelsRoute,
  AuthedUserPartnersFuneralparlorsRoute: AuthedUserPartnersFuneralparlorsRoute,
  AuthedUserPartnersIndexRoute: AuthedUserPartnersIndexRoute,
}

const AuthedUserPartnersRouteWithChildren =
  AuthedUserPartnersRoute._addFileChildren(AuthedUserPartnersRouteChildren)

interface AuthedUserRouteChildren {
  AuthedUserDashboardRoute: typeof AuthedUserDashboardRoute
  AuthedUserObituaryRoute: typeof AuthedUserObituaryRouteWithChildren
  AuthedUserPartnersRoute: typeof AuthedUserPartnersRouteWithChildren
  AuthedUserSettingsRoute: typeof AuthedUserSettingsRoute
}

const AuthedUserRouteChildren: AuthedUserRouteChildren = {
  AuthedUserDashboardRoute: AuthedUserDashboardRoute,
  AuthedUserObituaryRoute: AuthedUserObituaryRouteWithChildren,
  AuthedUserPartnersRoute: AuthedUserPartnersRouteWithChildren,
  AuthedUserSettingsRoute: AuthedUserSettingsRoute,
}

const AuthedUserRouteWithChildren = AuthedUserRoute._addFileChildren(
  AuthedUserRouteChildren,
)

interface AuthedRouteChildren {
  AuthedAdminRoute: typeof AuthedAdminRoute
  AuthedUserRoute: typeof AuthedUserRouteWithChildren
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedAdminRoute: AuthedAdminRoute,
  AuthedUserRoute: AuthedUserRouteWithChildren,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthedUserRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/dashboard': typeof AuthedUserDashboardRoute
  '/obituary': typeof AuthedUserObituaryRouteWithChildren
  '/partners': typeof AuthedUserPartnersRouteWithChildren
  '/settings': typeof AuthedUserSettingsRoute
  '/obituary/$id': typeof ObituaryIdIndexRoute
  '/partners/funeral_chapels': typeof AuthedUserPartnersFuneralchapelsRoute
  '/partners/funeral_parlors': typeof AuthedUserPartnersFuneralparlorsRoute
  '/obituary/': typeof AuthedUserObituaryIndexRoute
  '/partners/': typeof AuthedUserPartnersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthedUserRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/dashboard': typeof AuthedUserDashboardRoute
  '/settings': typeof AuthedUserSettingsRoute
  '/obituary/$id': typeof ObituaryIdIndexRoute
  '/partners/funeral_chapels': typeof AuthedUserPartnersFuneralchapelsRoute
  '/partners/funeral_parlors': typeof AuthedUserPartnersFuneralparlorsRoute
  '/obituary': typeof AuthedUserObituaryIndexRoute
  '/partners': typeof AuthedUserPartnersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/_authed/_admin': typeof AuthedAdminRoute
  '/_authed/_user': typeof AuthedUserRouteWithChildren
  '/_authed/_user/dashboard': typeof AuthedUserDashboardRoute
  '/_authed/_user/obituary': typeof AuthedUserObituaryRouteWithChildren
  '/_authed/_user/partners': typeof AuthedUserPartnersRouteWithChildren
  '/_authed/_user/settings': typeof AuthedUserSettingsRoute
  '/obituary_/$id/': typeof ObituaryIdIndexRoute
  '/_authed/_user/partners/funeral_chapels': typeof AuthedUserPartnersFuneralchapelsRoute
  '/_authed/_user/partners/funeral_parlors': typeof AuthedUserPartnersFuneralparlorsRoute
  '/_authed/_user/obituary/': typeof AuthedUserObituaryIndexRoute
  '/_authed/_user/partners/': typeof AuthedUserPartnersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signIn'
    | '/signUp'
    | '/dashboard'
    | '/obituary'
    | '/partners'
    | '/settings'
    | '/obituary/$id'
    | '/partners/funeral_chapels'
    | '/partners/funeral_parlors'
    | '/obituary/'
    | '/partners/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/signIn'
    | '/signUp'
    | '/dashboard'
    | '/settings'
    | '/obituary/$id'
    | '/partners/funeral_chapels'
    | '/partners/funeral_parlors'
    | '/obituary'
    | '/partners'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/signIn'
    | '/signUp'
    | '/_authed/_admin'
    | '/_authed/_user'
    | '/_authed/_user/dashboard'
    | '/_authed/_user/obituary'
    | '/_authed/_user/partners'
    | '/_authed/_user/settings'
    | '/obituary_/$id/'
    | '/_authed/_user/partners/funeral_chapels'
    | '/_authed/_user/partners/funeral_parlors'
    | '/_authed/_user/obituary/'
    | '/_authed/_user/partners/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  ObituaryIdIndexRoute: typeof ObituaryIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  ObituaryIdIndexRoute: ObituaryIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authed",
        "/signIn",
        "/signUp",
        "/obituary_/$id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/_admin",
        "/_authed/_user"
      ]
    },
    "/signIn": {
      "filePath": "signIn.tsx"
    },
    "/signUp": {
      "filePath": "signUp.tsx"
    },
    "/_authed/_admin": {
      "filePath": "_authed/_admin.tsx",
      "parent": "/_authed"
    },
    "/_authed/_user": {
      "filePath": "_authed/_user.tsx",
      "parent": "/_authed",
      "children": [
        "/_authed/_user/dashboard",
        "/_authed/_user/obituary",
        "/_authed/_user/partners",
        "/_authed/_user/settings"
      ]
    },
    "/_authed/_user/dashboard": {
      "filePath": "_authed/_user/dashboard.tsx",
      "parent": "/_authed/_user"
    },
    "/_authed/_user/obituary": {
      "filePath": "_authed/_user/obituary.tsx",
      "parent": "/_authed/_user",
      "children": [
        "/_authed/_user/obituary/"
      ]
    },
    "/_authed/_user/partners": {
      "filePath": "_authed/_user/partners.tsx",
      "parent": "/_authed/_user",
      "children": [
        "/_authed/_user/partners/funeral_chapels",
        "/_authed/_user/partners/funeral_parlors",
        "/_authed/_user/partners/"
      ]
    },
    "/_authed/_user/settings": {
      "filePath": "_authed/_user/settings.tsx",
      "parent": "/_authed/_user"
    },
    "/obituary_/$id/": {
      "filePath": "obituary_/$id/index.tsx"
    },
    "/_authed/_user/partners/funeral_chapels": {
      "filePath": "_authed/_user/partners/funeral_chapels.tsx",
      "parent": "/_authed/_user/partners"
    },
    "/_authed/_user/partners/funeral_parlors": {
      "filePath": "_authed/_user/partners/funeral_parlors.tsx",
      "parent": "/_authed/_user/partners"
    },
    "/_authed/_user/obituary/": {
      "filePath": "_authed/_user/obituary/index.tsx",
      "parent": "/_authed/_user/obituary"
    },
    "/_authed/_user/partners/": {
      "filePath": "_authed/_user/partners/index.tsx",
      "parent": "/_authed/_user/partners"
    }
  }
}
ROUTE_MANIFEST_END */
